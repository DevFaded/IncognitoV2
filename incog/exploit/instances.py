from rbx.instance import Instance
from rbx.script_context import ScriptContext
from rbx.module_script import ModuleScript

class Instances:
    game: Instance = None
    core_gui: Instance = None
    core_packages: Instance = None
    script_context: ScriptContext = None

    player_list_manager: ModuleScript = None

    lumberyak: ModuleScript = None
    jest_globals: ModuleScript = None

def load_instances(data_model: int):
    old_datamodel: Instance = Instances.game
    if old_datamodel is not None and old_datamodel.address == data_model: # if same datamodel dont update.
        return None

    data_model = Instance(data_model)
    Instances.game = data_model

    Instances.core_gui = data_model["CoreGui-C"]
    Instances.core_packages = data_model["CorePackages-C"]
    Instances.script_context = ScriptContext(data_model.waitfor_class("ScriptContext", 10))

    Instances.player_list_manager = ModuleScript(Instances.core_gui["RobloxGui"]["Modules"]["PlayerList"]["PlayerListManager"])
    
    core_packages = Instances.core_packages
    lua_packages = core_packages["Workspace"]["Packages"]

    Instances.lumberyak = ModuleScript(lua_packages["Lumberyak"])
    Instances.jest_globals = ModuleScript(lua_packages["_Workspace"]["AccountSelector"]["Dev"]["JestGlobals"])